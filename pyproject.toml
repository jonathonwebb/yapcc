[build-system]
requires = ["setuptools >= 70.0"]
build-backend = "setuptools.build_meta"

[project]
name = "yapcc"
version = "0.0.1"
dependencies = []
requires-python = ">=3.12"
authors = [{name="Jon Webb", email="jon@jonwebb.dev"}]
description = "Yet Another Python C compiler"
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]

[project.urls]
Homepage = "https://github.com/jon-codes/yapcc"
Repository = "https://github.com/jon-codes/yapcc.git"
Issues = "https://github.com/jon-codes/yapcc/issues"

[project.optional-dependencies]
dev = ["ruff~=0.4.7", "mypy~=1.10.0", "pytest~=8.2.2", "coverage~=7.5.3"]

[project.scripts]
yapcc = "yapcc.cli:main"

[tool.pytest.ini_options]
cache_dir = ".cache/pytest_cache"

[tool.coverage.run]
source = ["yapcc"]
data_file = ".cache/.coverage"

[tool.coverage.paths]
source = [
  "src/yapcc",
  "**/site-packages/yapcc"
]

[tool.mypy]
python_version = 3.12
strict = true
cache_dir = ".cache/mypy_cache"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]

# Same as Black.
line-length = 88
indent-width = 4

cache-dir = '.cache/ruff_cache'

[tool.ruff.lint]
preview = true

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I", "D", "B", "ANN", "CPY", "PT"]
ignore = ["D107", "D203", "D213"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["D"]

[rool.ruff.lint.flake8-copyright]
author = "Jon Webb <jon@jonwebb.dev>"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
